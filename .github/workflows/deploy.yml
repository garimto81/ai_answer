# GitHub Pages에 정적 콘텐츠를 배포하기 위한 간단한 워크플로우
name: Deploy static content to Pages

on:
  # 기본 브랜치에 대한 푸시에 실행됩니다.
  push:
    branches: ["main"]

  # Actions 탭에서 수동으로 이 워크플로우를 실행할 수 있도록 허용합니다.
  workflow_dispatch:

# GITHUB_TOKEN의 권한을 설정하여 GitHub Pages에 배포를 허용합니다.
permissions:
  contents: read
  pages: write
  id-token: write

# 한 번에 하나의 배포만 허용하도록 동시성 제어를 설정합니다.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # 배포 잡
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # --- 디버깅 로그 강화 시작 ---
      - name: 1. Show Directory Structure
        run: |
          echo "--- 현재 디렉토리의 모든 파일 및 폴더 목록 ---"
          ls -R
          echo "-------------------------------------------"

      - name: 2. Check GAS_URL Secret
        run: |
          if [ -z "${{ secrets.GAS_URL }}" ]; then
            echo "!!! 오류: GAS_URL Secret이 비어있거나 설정되지 않았습니다."
            exit 1
          else
            echo "--- 성공: GAS_URL Secret을 찾았습니다. (길이는 0이 아님)"
          fi

      - name: 3. Show index.html content BEFORE replacement
        run: |
          echo "--- URL 교체 전 index.html 내용 (placeholder 확인용) ---"
          cat index.html || echo "!!! 오류: index.html 파일을 찾을 수 없습니다."
          echo "---------------------------------------------------------"
      # --- 디버깅 로그 강화 끝 ---

      - name: Replace GAS URL Placeholder
        # index.html 파일 내의 플레이스홀더를 GitHub Secret 값으로 교체합니다.
        run: |
          sed -i "s|__GAS_URL_PLACEHOLDER__|${{ secrets.GAS_URL }}|g" index.html

      # --- 디버깅 로그 강화 시작 ---
      - name: 4. Show index.html content AFTER replacement
        run: |
          echo "--- URL 교체 후 index.html 내용 (교체 결과 확인용) ---"
          cat index.html
          echo "--------------------------------------------------------"
      # --- 디버깅 로그 강화 끝 ---

      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 현재 폴더(루트)의 모든 내용을 업로드합니다.
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
